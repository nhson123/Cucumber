package Steps.gmxStep;

import Steps.action.FindElementBasics;
import Steps.arrange.DriverWait;
import base.BaseUtil;
import cucumber.api.DataTable;
import cucumber.api.PendingException;
import cucumber.api.java8.En;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.picocontainer.classname.ClassName;
import org.testng.annotations.Test;

import java.util.List;
import java.util.logging.Logger;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * Package: PACKAGE_NAME
 * Generated by: Hoang.Son.Nguyen
 * Generated at: 14.10.2018 2018
 */
public class GmxLoginStep extends BaseUtil implements En {
    private BaseUtil base;

    private static final Logger LOGGER = Logger.getLogger(ClassName.class.getName());

    public GmxLoginStep(BaseUtil base) {
        this.base = base;

        Given("^i navigate to the Gmx login page$", () -> {
            base.webDriver.navigate().to("http://www.gmx.at");
            base.webDriver.manage().window().maximize();
            //OpenCloseSite.openSiteByUrlBrowser("http://www.gmx.at","CHROME");
            WebElement gmxLogo = FindElementBasics.findByXPath(base.webDriver, "//a[@href='https://www.gmx.at/']");
            assertTrue(gmxLogo.isDisplayed());

        });
        And("^i enter \"([^\"]*)\" and \"([^\"]*)\"$", (String admin, String adminpwd) -> {
            WebElement loginEmail = FindElementBasics.findById(base.webDriver, "freemailLoginUsername");
            WebElement loginPwd = FindElementBasics.findById(base.webDriver, "freemailLoginPassword");
            assertTrue(loginEmail.isDisplayed());
            assertTrue(loginPwd.isDisplayed());
            loginEmail.sendKeys(admin);
            loginPwd.sendKeys(adminpwd);
            System.out.println("Username: " + admin + ", " + "Pwd: " + adminpwd);
        });

        And("^i click the Gmx Enter button$", () -> {
            WebElement loginButton = FindElementBasics.findByXPath(base.webDriver, "//form[@id='freemailLoginForm']//input[@value='Login']");
            assertTrue(loginButton.isEnabled());
            loginButton.click();
        });
        Then("^i could see the Gmx user form page$", () -> {
            //list all iFrame
            List<WebElement> list = base.webDriver.findElements(By.tagName("iframe"));
            for (WebElement element : list) {
                // pick up the needed iframe
                if (element.getAttribute("name").equals("home")) {
                    System.out.println("Element: " + element.getAttribute("name") + ", Src: " + element.getAttribute("src") + " Id: " + element.getAttribute("id"));
                    // switch the diriver to this iframe
                    base.webDriver.switchTo().frame(element);
                    break;
                }
            }
            // have to wait till the driver switch already to iframe
            DriverWait.waitForSecondsTimeOut(5, base.webDriver);
            WebElement userInfo = base.webDriver.findElement(By.xpath("//span[@class='small nx-config-userinfo-name']"));
            assertTrue(userInfo.isDisplayed());
            assertTrue(userInfo.getText().equals("Hoang Son nguyen"));
            System.out.println("Elw: " + userInfo.getText());
            base.webDriver.switchTo().defaultContent();



        });

        And("^i enter following errorUser and  errorPwd$", (DataTable errorUserTable) -> {
            /*one way to parse the Table
            List<List<String>> data = errorUserTable.raw();
            System.out.println(data.get(2).get(0));
            System.out.println(data.get(2).get(1));
            */
            //or convert Datatable to a List of Object
            List<GmxLoginStep.ErrorUser> erroUsers;
            erroUsers = errorUserTable.asList(GmxLoginStep.ErrorUser.class);
            for (GmxLoginStep.ErrorUser erroruser : erroUsers) {
                LOGGER.info(erroruser.errorUser + " " + erroruser.errorPwd);
                WebElement loginEmail = FindElementBasics.findById(base.webDriver, "freemailLoginUsername");
                WebElement loginPwd = FindElementBasics.findById(base.webDriver, "freemailLoginPassword");
                assertTrue(loginEmail.isDisplayed());
                assertTrue(loginPwd.isDisplayed());
                loginEmail.sendKeys(erroruser.errorUser);
                loginPwd.sendKeys(erroruser.errorPwd);
            }
        });
        Then("^i see the alert error login$", () -> {
            WebElement errorAlert = FindElementBasics.findByXPath(base.webDriver, "//h2[contains(text(),'Login leider nicht erfolgreich')]");
            assertTrue(errorAlert.getText().equals("Login leider nicht erfolgreich"));
        });

    }

    private class ErrorUser {
        String errorUser;
        String errorPwd;

        public ErrorUser(String errorUser, String errorPwd) {
            this.errorUser = errorUser;
            this.errorPwd = errorPwd;
        }

    }

}
