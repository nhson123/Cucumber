package Steps.tutor.pageFactory;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

/** Package: Steps.tutor Generated by: Hoang.Son.Nguyen Generated at: 25.11.2018 2018 */
// https://www.swtestacademy.com/data-driven-excel-selenium/
public class ExcelFileTestSteps {

  public static void readExcel(String filepath, String fileName, String sheetName)
      throws IOException {
    // create an object of File to open xls oder xlsx file
    File file = new File(filepath + "\\" + fileName);
    FileInputStream inputStream = new FileInputStream(file);
    Workbook workbook = null;
    String fileExtentionName = fileName.substring(fileName.indexOf("."));
    if (fileExtentionName.equals(".xls")) {
      workbook = new HSSFWorkbook(inputStream);
    } else if (fileExtentionName.equals(".xlsx")) {
      workbook = new XSSFWorkbook(inputStream);
    }
    Sheet workbookSheet = workbook.getSheet(sheetName);
    int rowCount = workbookSheet.getLastRowNum() - workbookSheet.getFirstRowNum();
    for (int i = 0; i <= rowCount; i++) {
      System.out.println();
      Row row = workbookSheet.getRow(i);
      for (int j = 0; j < row.getLastCellNum(); j++) {
        System.out.print(row.getCell(j) + " || ");
      }
      System.out.println();
    }
  }

  public static void writeExcel(
      String filepath, String fileName, String sheetName, String[] dataToWrite) throws IOException {
    // create an object of File to open xls oder xlsx file
    File file = new File(filepath + "\\" + fileName);
    FileInputStream inputStream = new FileInputStream(file);
    Workbook workbook = null;
    String fileExtentionName = fileName.substring(fileName.indexOf("."));
    if (fileExtentionName.equals(".xls")) {
      workbook = new HSSFWorkbook(inputStream);
    } else if (fileExtentionName.equals(".xlsx")) {
      workbook = new XSSFWorkbook(inputStream);
    }
    Sheet workbookSheet = workbook.getSheet(sheetName);
    int rowCount = workbookSheet.getLastRowNum() - workbookSheet.getFirstRowNum();
    Row firstRow = workbookSheet.getRow(0); // to get the colum number
    Row newRow = workbookSheet.createRow(rowCount + 1); // new Row
    for (int j = 0; j < firstRow.getLastCellNum(); j++) { // fill the new row
      Cell cell = newRow.createCell(j);
      cell.setCellValue(dataToWrite[j]);
    }
    inputStream.close();
    FileOutputStream outputStream = new FileOutputStream(file); // outputstream to write
    workbook.write(outputStream);
    outputStream.close();
  }

  /*
    @Test
    public void TestReadData() {

      // You need to use File class which will ask for file location.I specified  base// directory
      // //using dot(.) operator then inside data folder I have testdata.xls// stored

      File src = new File(".\\src\\test\\TestData\\TestSheet.xls");

      try {
        // Workbook is a class in Jexcel which will take file as an argument and getWork//book is a
        // predefined method which will read the workbook and will return the w//Workbook object

        Workbook wb = Workbook.getWorkbook(src);

        // Workbook is loaded now we have to load sheet so using workbook object (wb) we// can call
        // getSheet method which will take index as an argument and will load t//he sheet, we can also
        // specify the sheetname also

        Sheet sh1 = wb.getSheet(0);

        // Sheet is loaded then we have to read cell so using sh1 object call getCell me//thod which
        // we take two arguments getCell(column,row)

        Cell c1 = sh1.getCell(0, 0);

        // Cell is loaded then using getContents method we have  to extract the data usin//g
        // getContents() methods
        // this method will always return you String.
        // now you are done

        String data1 = c1.getContents();

        // Print the data
        System.out.println(data1);

        System.out.println("Sheet data is " + data1);

      } catch (BiffException e) {

        e.printStackTrace();

      } catch (IOException e) {
        e.printStackTrace();
      }
    }
  */
}
